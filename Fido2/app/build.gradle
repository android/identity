/*
 * Copyright 2021 Google Inc. All Rights Reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'dagger.hilt.android.plugin'

android {
    namespace 'com.google.android.gms.identity.sample.fido2'
    compileSdk 35
    defaultConfig {
        applicationId 'com.google.android.gms.identity.sample.fido2'
        minSdk 21
        targetSdk 35
        versionCode 1
        versionName '1.0'
        testInstrumentationRunner 'androidx.test.runner.AndroidJUnitRunner'
        vectorDrawables.useSupportLibrary = true
        buildConfigField 'String', 'API_BASE_URL', "\"https://webauthn-codelab.glitch.me/auth\""
        resValue 'string', 'host', 'https://webauthn-codelab.glitch.me'
        resValue 'string', 'asset_statements', """
           [{
             "include": "https://webauthn-codelab.glitch.me/.well-known/assetlinks.json"
           }]
        """
    }
    signingConfigs {
        debug {
            storeFile file('../debug.jks')
            storePassword 'android'
            keyAlias 'androiddebugkey'
            keyPassword 'android'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }
    kotlinOptions {
        jvmTarget = '17'
    }
    buildFeatures {
        buildConfig true
        dataBinding true
    }
    buildTypes {
        debug {
            signingConfig signingConfigs.debug
        }
        release {
            signingConfig signingConfigs.debug
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    implementation libs.kotlin.stdlib
    implementation libs.play.services.fido

    implementation libs.androidx.appcompat
    implementation libs.androidx.fragment.ktx
    implementation libs.androidx.core.ktx
    implementation libs.androidx.constraintlayout
    implementation libs.androidx.datastore.preferences

    implementation libs.kotlinx.coroutines.core
    implementation libs.kotlinx.coroutines.android
    implementation libs.kotlinx.coroutines.play.services

    implementation libs.dagger.hilt.android
    kapt libs.dagger.hilt.compiler
    kapt libs.androidx.hilt.compiler

    implementation libs.androidx.lifecycle.livedata.ktx
    implementation libs.androidx.lifecycle.runtime.ktx
    implementation libs.androidx.lifecycle.viewmodel.ktx
    testImplementation libs.androidx.core.testing

    implementation libs.material.design

    implementation libs.okhttp
    implementation libs.okhttp.logging.interceptor
    implementation libs.kotlin.coroutines.okhttp

    testImplementation libs.junit
    debugImplementation libs.androidx.test.monitor
    androidTestImplementation libs.androidx.test.runner
    androidTestImplementation libs.androidx.test.rules
    androidTestImplementation libs.androidx.test.ext.junit
    androidTestImplementation libs.androidx.test.ext.truth
    androidTestImplementation libs.google.truth
    androidTestImplementation libs.androidx.espresso.core
}
